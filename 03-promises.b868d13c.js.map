{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAYC,SAASC,cAAc,SACzCF,EAAUG,iBAAiB,UAE3B,SAA4BC,GAC1BA,EAAKC,iBACL,IAAIC,EAAQC,OAAOP,EAAUQ,MAAMC,OACnC,MAAMC,EAAOH,OAAOP,EAAUU,KAAKD,OAC7BE,EAASJ,OAAOP,EAAUW,OAAOF,OACvC,IAAIG,EAAW,EAEf,MAAMC,EAAaC,aAAY,KAC7BF,GAAY,EAERD,EAASC,EACXG,cAAcF,IAwBpB,SAAuBG,EAAUR,GAC/B,MAAMS,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BR,aAAY,KACNG,EAEFI,EAAQ,C,SAAEL,E,MAAUR,IAGpBc,EAAO,C,SAAEN,E,MAAUR,GAAQ,GAE5BA,EAAM,G,CAjCTe,CAAcX,EAAUN,GACrBkB,MAAK,EAACR,SAAEA,EAAQR,MAAEA,MACjBV,EAAA2B,OAAOC,QAAQ,qBAAqBV,QAAeR,MAAW,CAC5DmB,cAAc,EACdC,SAAS,EACTC,SAAU,OACVb,SAAU,eACV,IAEHc,OAAM,EAACd,SAAEA,EAAQR,MAAEA,MAClBV,EAAA2B,OAAOM,QAAQ,oBAAoBf,QAAeR,MAAW,CAC3DmB,cAAc,EACdC,SAAS,EACTC,SAAU,OACVb,SAAU,eACV,IAENV,GAASI,EAAI,GACZA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formInput = document.querySelector('.form');\nformInput.addEventListener('submit', startCreatePromise);\n\nfunction startCreatePromise(evnt) {\n  evnt.preventDefault();\n  let delay = Number(formInput.delay.value);\n  const step = Number(formInput.step.value);\n  const amount = Number(formInput.amount.value);\n  let position = 0;\n\n  const intervalId = setInterval(() => {\n    position += 1;\n\n    if (amount < position) {\n      clearInterval(intervalId);\n      return;\n    }\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          clickToClose: true,\n          useIcon: false,\n          fontSize: '16px',\n          position: 'left-bottom',\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          clickToClose: true,\n          useIcon: false,\n          fontSize: '16px',\n          position: 'left-bottom',\n        });\n      });\n    delay += step;\n  }, step);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formInput","document","querySelector","addEventListener","evnt","preventDefault","delay1","Number","delay","value","step","amount","position1","intervalId","setInterval","clearInterval","position","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","Notify","success","clickToClose","useIcon","fontSize","catch","failure"],"version":3,"file":"03-promises.b868d13c.js.map"}